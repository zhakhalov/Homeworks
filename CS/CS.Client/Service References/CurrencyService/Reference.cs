//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CS.Client.CurrencyService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CurrencyDTO", Namespace="http://schemas.datacontract.org/2004/07/CS.Service.DTOs")]
    [System.SerializableAttribute()]
    public partial class CurrencyDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimeRangeDTO", Namespace="http://schemas.datacontract.org/2004/07/CS.Service.DTOs")]
    [System.SerializableAttribute()]
    public partial class TimeRangeDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FirstField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime First {
            get {
                return this.FirstField;
            }
            set {
                if ((this.FirstField.Equals(value) != true)) {
                    this.FirstField = value;
                    this.RaisePropertyChanged("First");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Last {
            get {
                return this.LastField;
            }
            set {
                if ((this.LastField.Equals(value) != true)) {
                    this.LastField = value;
                    this.RaisePropertyChanged("Last");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RateDTO", Namespace="http://schemas.datacontract.org/2004/07/CS.Service.DTOs")]
    [System.SerializableAttribute()]
    public partial class RateDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimestampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((this.TimestampField.Equals(value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CurrencyService.ICurrencyService")]
    public interface ICurrencyService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICurrencyService/GetAllCurrencies", ReplyAction="http://tempuri.org/ICurrencyService/GetAllCurrenciesResponse")]
        CS.Client.CurrencyService.CurrencyDTO[] GetAllCurrencies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICurrencyService/GetAllCurrencies", ReplyAction="http://tempuri.org/ICurrencyService/GetAllCurrenciesResponse")]
        System.Threading.Tasks.Task<CS.Client.CurrencyService.CurrencyDTO[]> GetAllCurrenciesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICurrencyService/GetTimeRange", ReplyAction="http://tempuri.org/ICurrencyService/GetTimeRangeResponse")]
        System.Collections.Generic.Dictionary<string, CS.Client.CurrencyService.TimeRangeDTO> GetTimeRange(string[] codes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICurrencyService/GetTimeRange", ReplyAction="http://tempuri.org/ICurrencyService/GetTimeRangeResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, CS.Client.CurrencyService.TimeRangeDTO>> GetTimeRangeAsync(string[] codes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICurrencyService/GetRate", ReplyAction="http://tempuri.org/ICurrencyService/GetRateResponse")]
        System.Collections.Generic.Dictionary<string, CS.Client.CurrencyService.RateDTO[]> GetRate(string[] codes, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICurrencyService/GetRate", ReplyAction="http://tempuri.org/ICurrencyService/GetRateResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, CS.Client.CurrencyService.RateDTO[]>> GetRateAsync(string[] codes, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICurrencyServiceChannel : CS.Client.CurrencyService.ICurrencyService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CurrencyServiceClient : System.ServiceModel.ClientBase<CS.Client.CurrencyService.ICurrencyService>, CS.Client.CurrencyService.ICurrencyService {
        
        public CurrencyServiceClient() {
        }
        
        public CurrencyServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CurrencyServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CurrencyServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CurrencyServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CS.Client.CurrencyService.CurrencyDTO[] GetAllCurrencies() {
            return base.Channel.GetAllCurrencies();
        }
        
        public System.Threading.Tasks.Task<CS.Client.CurrencyService.CurrencyDTO[]> GetAllCurrenciesAsync() {
            return base.Channel.GetAllCurrenciesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, CS.Client.CurrencyService.TimeRangeDTO> GetTimeRange(string[] codes) {
            return base.Channel.GetTimeRange(codes);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, CS.Client.CurrencyService.TimeRangeDTO>> GetTimeRangeAsync(string[] codes) {
            return base.Channel.GetTimeRangeAsync(codes);
        }
        
        public System.Collections.Generic.Dictionary<string, CS.Client.CurrencyService.RateDTO[]> GetRate(string[] codes, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to) {
            return base.Channel.GetRate(codes, from, to);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, CS.Client.CurrencyService.RateDTO[]>> GetRateAsync(string[] codes, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to) {
            return base.Channel.GetRateAsync(codes, from, to);
        }
    }
}
