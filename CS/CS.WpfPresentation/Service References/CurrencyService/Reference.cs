//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CS.WpfPresentation.CurrencyService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CurrencyService.ICurrencyService")]
    public interface ICurrencyService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICurrencyService/GetAllCurrencies", ReplyAction="http://tempuri.org/ICurrencyService/GetAllCurrenciesResponse")]
        CS.Client.CurrencyService.CurrencyDTO[] GetAllCurrencies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICurrencyService/GetAllCurrencies", ReplyAction="http://tempuri.org/ICurrencyService/GetAllCurrenciesResponse")]
        System.Threading.Tasks.Task<CS.Client.CurrencyService.CurrencyDTO[]> GetAllCurrenciesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICurrencyService/GetTimeRange", ReplyAction="http://tempuri.org/ICurrencyService/GetTimeRangeResponse")]
        System.Collections.Generic.Dictionary<string, CS.Client.CurrencyService.TimeRangeDTO> GetTimeRange(string[] codes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICurrencyService/GetTimeRange", ReplyAction="http://tempuri.org/ICurrencyService/GetTimeRangeResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, CS.Client.CurrencyService.TimeRangeDTO>> GetTimeRangeAsync(string[] codes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICurrencyService/GetRate", ReplyAction="http://tempuri.org/ICurrencyService/GetRateResponse")]
        System.Collections.Generic.Dictionary<string, CS.Client.CurrencyService.RateDTO[]> GetRate(string[] codes, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICurrencyService/GetRate", ReplyAction="http://tempuri.org/ICurrencyService/GetRateResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, CS.Client.CurrencyService.RateDTO[]>> GetRateAsync(string[] codes, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICurrencyServiceChannel : CS.WpfPresentation.CurrencyService.ICurrencyService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CurrencyServiceClient : System.ServiceModel.ClientBase<CS.WpfPresentation.CurrencyService.ICurrencyService>, CS.WpfPresentation.CurrencyService.ICurrencyService {
        
        public CurrencyServiceClient() {
        }
        
        public CurrencyServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CurrencyServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CurrencyServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CurrencyServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CS.Client.CurrencyService.CurrencyDTO[] GetAllCurrencies() {
            return base.Channel.GetAllCurrencies();
        }
        
        public System.Threading.Tasks.Task<CS.Client.CurrencyService.CurrencyDTO[]> GetAllCurrenciesAsync() {
            return base.Channel.GetAllCurrenciesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, CS.Client.CurrencyService.TimeRangeDTO> GetTimeRange(string[] codes) {
            return base.Channel.GetTimeRange(codes);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, CS.Client.CurrencyService.TimeRangeDTO>> GetTimeRangeAsync(string[] codes) {
            return base.Channel.GetTimeRangeAsync(codes);
        }
        
        public System.Collections.Generic.Dictionary<string, CS.Client.CurrencyService.RateDTO[]> GetRate(string[] codes, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to) {
            return base.Channel.GetRate(codes, from, to);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, CS.Client.CurrencyService.RateDTO[]>> GetRateAsync(string[] codes, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to) {
            return base.Channel.GetRateAsync(codes, from, to);
        }
    }
}
